buildscript {
	ext {springBootVersion = '1.2.2.RELEASE'}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath('org.springframework.boot:spring-boot-gradle-plugin:1.2.2.RELEASE')
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'jetty'

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-jetty")
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.springframework.hateoas:spring-hateoas")
	testCompile("org.springframework.boot:spring-boot-starter-test")
}

task fatJar(type: Jar) {
	manifest {
		attributes(
			"Main-Class": "com.example.template.Application",
			"Application-Name": "BookService-v0.1.0",
			"Trusted-Only": true,
			"Trusted-Library": true,
			"Class-Path": configurations.compile.collect { it.getName() }.join(' '))
	}
	baseName = 'bookService' + '-v0.1.0'
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
	exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

task createJavaProject << {
	sourceSets*.java.srcDirs*.each { it.mkdirs() }
	sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

task createWebProject(dependsOn: 'createJavaProject') << {
	def webAppDir = file("$webAppDirName")
	webAppDir.mkdirs()
}
